name: Deploy website
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    # define outputs identifiers of your job
    # steps is the context which we are accessing (where steps data is stored)
    # then we access the id of one of our steps and then the output we defined
    outputs:
      script-file: $ {{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
        # GITHUB_OUTPUT is a file created by the github environment where the
        # output value pair is written into
        # the id is used to access data linked to that id (in this case the output of the step)
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';' 
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          # name of the artifact zip
          name: dist-files
          # paths that will be uploaded as artifacts to github
          path: dist
          # path: |
          #   dist
          #   package.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with: 
          name: dist-files
      # after downloading the artifacts to our runner, the folder dist-files will be lost and we will
      # only be able to view the list of the downloaded artifacts
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
       
